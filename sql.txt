event_counts_by_tracker.sql – “Does this tracker have any historical actions?”
sql
Copy
/* [Redshift] event_counts_by_tracker.sql */
SELECT
    at.id               AS tracker_id,
    at.name             AS tracker_name,
    COUNT(a.id)         AS action_count          -- must be ZERO to delete
FROM   action_type             at                -- tracker / event‑type table
LEFT   JOIN action             a
           ON a.action_type_id = at.id
WHERE  at.advertiser_id    = :ADVERTISER_ID      -- e.g. 4911671
  AND  at.id               IN (:TRACKER_ID_LIST) -- e.g. (41391,41392,…)
GROUP BY at.id, at.name
ORDER BY at.id;
✅ Interpretation: every row must return action_count = 0.
If you see 1 or higher, that tracker can never be deleted (policy = keep history); set it Inactive instead.

2 · tracker_term_linkage.sql – “Is the tracker still mapped to a Template, Custom, or partner‑override term?”
sql
Copy
/* [Redshift] tracker_term_linkage.sql */
SELECT
    at.id                    AS tracker_id,
    at.name                  AS tracker_name,
    io.id                    AS term_id,
    io.name                  AS term_name,
    CASE
        WHEN io.io_type = 'TEMPLATE'       THEN 'Template Term'
        WHEN io.io_type = 'PARTNER_TERM'   THEN 'Partner Override'
        ELSE                                    'Custom Term'
    END                      AS term_type,
    io.status
FROM   action_type                at
JOIN   insertion_order_action_type ioat   ON ioat.action_type_id = at.id
JOIN   insertion_order            io      ON io.id              = ioat.insertion_order_id
WHERE  at.advertiser_id = :ADVERTISER_ID
  AND  at.id            IN (:TRACKER_ID_LIST)
  AND  io.status        = 'ACTIVE'         -- filter out retired terms
ORDER BY term_type, term_name;
✅ Interpretation: this query must return zero rows before a tracker will delete.
If rows appear, edit the term(s) in the UI → change Action Type to a keeper (e.g. Online Sale) → Save.

3 · funnel_parent_child_map.sql – “Is the tracker a parent or child in a funnel hierarchy?”
sql
Copy
/* [Redshift] funnel_parent_child_map.sql */
SELECT
    child.id   AS child_tracker_id,
    child.name AS child_tracker_name,
    parent.id  AS parent_tracker_id,
    parent.name AS parent_tracker_name
FROM   action_type child
JOIN   action_type parent
           ON child.parent_action_type_id = parent.id
WHERE  child.advertiser_id = :ADVERTISER_ID
  AND (child.id  IN (:TRACKER_ID_LIST)
       OR parent.id IN (:TRACKER_ID_LIST))
ORDER BY child_tracker_id;