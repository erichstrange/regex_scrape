-- 0) Create a temp table to hold IDs
CREATE TEMPORARY TABLE ts_tmp_click_ids (click_id VARCHAR(128) PRIMARY KEY);

-- 1) Option A: bulk load from CSV (preferred if enabled)
-- LOAD DATA LOCAL INFILE '/path/to/squarespace_click_ids__union_unique_clean.csv'
-- INTO TABLE ts_tmp_click_ids
-- FIELDS TERMINATED BY ',' ENCLOSED BY '"' LINES TERMINATED BY '\n'
-- IGNORE 1 LINES (click_id);

-- 1) Option B: run in batches with IN-lists (paste each file's content into IN (...))
-- INSERT INTO ts_tmp_click_ids(click_id) VALUES ('id1'),('id2'),...;

-- 2) Detailed lookup
SELECT
  cf.campaign_id,
  cf.event_datetime,
  cf.click_id,
  cf.publisher_id,
  p.name                                AS publisher_name,
  cf.profile_id,
  ad.ad_id,
  ad.name                                AS ad_name,
  JSON_EXTRACT_STRING(cf.json,'inboundLink')  AS tracking_link,
  JSON_EXTRACT_STRING(cf.json,'blockingRule') AS blocking_rule,
  JSON_EXTRACT_STRING(cf.json,'ruleName')     AS rule_name,
  cf.ref_url,
  CASE
    WHEN cf.ref_url LIKE '%://%' THEN SUBSTRING_INDEX(SUBSTRING_INDEX(cf.ref_url,'/',3),'/',-1)
    ELSE SUBSTRING_INDEX(cf.ref_url,'/',1)
  END AS ref_domain,
  cf.landing_page_url,
  cf.pub_subid1, cf.pub_subid2, cf.pub_subid3, cf.pub_subid4,
  cf.method,
  cf.classification,
  cf.cpc_contract_id,
  cf.cpc_adv_raw_payout,
  cf.cpc_error_code,
  cf.cpc_payout_trace,
  cf.cpc_payable,
  cf.reason_code_datacenter,
  cf.reason_code_ip_reputation,
  cf.reason_code_proxy,
  cf.reason_code_domain_reputation,
  cf.risk_level,
  cf.tracking_server,
  JSON_EXTRACT_STRING(cf.json,'org')          AS org
FROM click_fact cf
LEFT JOIN ad_dim        ad ON ad.id = cf.ad_dim_id
LEFT JOIN publisher_dim p  ON p.id  = cf.publisher_id
JOIN ts_tmp_click_ids   t  ON t.click_id = cf.click_id
ORDER BY cf.event_datetime DESC;
